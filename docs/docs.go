// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag/v2"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},"swagger":"2.0","info":{"description":"{{escape .Description}}","title":"{{.Title}}","contact":{},"version":"{{.Version}}"},"host":"{{.Host}}","basePath":"{{.BasePath}}","paths":{"/login":{"post":{"description":"Authenticate user credentials and set session cookie","consumes":["application/x-www-form-urlencoded"],"produces":["text/html"],"tags":["auth"],"summary":"Log in a user","parameters":[{"type":"string","description":"User email","name":"email","in":"formData","required":true},{"type":"string","description":"Password","name":"password","in":"formData","required":true},{"type":"string","description":"Admin flag ('on' if admin)","name":"admin","in":"formData"}],"responses":{"302":{"description":"Redirects to /admin_page or / on success"},"403":{"description":"Forbidden","schema":{"$ref":"#/definitions/models.ErrorResponse"}}}}},"/registration":{"post":{"description":"Handles user registration form submission and user creation","consumes":["application/x-www-form-urlencoded"],"produces":["text/html"],"tags":["auth"],"summary":"Register a new user","parameters":[{"type":"string","description":"First Name","name":"firstName","in":"formData","required":true},{"type":"string","description":"Second Name","name":"secondName","in":"formData","required":true},{"type":"string","description":"Username","name":"username","in":"formData","required":true},{"type":"string","description":"Email Address","name":"email","in":"formData","required":true},{"type":"string","description":"Password","name":"password","in":"formData","required":true},{"type":"string","description":"Admin flag ('on' if admin)","name":"admin","in":"formData"}],"responses":{"302":{"description":"Redirects to /login on success"},"405":{"description":"Method Not Allowed","schema":{"$ref":"#/definitions/models.ErrorResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/models.ErrorResponse"}}}}}},"definitions":{"models.ErrorResponse":{"type":"object","properties":{"errorMessage":{"type":"string"},"errorNum":{"type":"integer"}}}}}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "https://localhost:8082",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Forum API",
	Description:      "This is a sample forum API server written in Go.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
